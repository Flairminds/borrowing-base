"""empty message

Revision ID: 1b661d00e598
Revises: 
Create Date: 2024-12-30 19:04:59.779512

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1b661d00e598'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('extracted_base_data_info',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('report_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('fund_type', sa.String(length=15), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('files', sa.ARRAY(sa.Integer()), nullable=True),
    sa.Column('extraction_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('comments', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.company_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # op.drop_table('pflt_security_mapping')
    # op.drop_table('Client Holdings')
    # op.drop_table('Borrower Stats')
    # op.drop_table('PFLT Borrowing Base')
    # op.drop_table('base_data')
    # op.drop_table('US Bank Holdings')
    # op.drop_table('Borrower Stats (Quarterly)')
    # op.drop_table('base_data_mapping')
    # op.drop_table('Securities Stats')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Securities Stats',
    sa.Column('Security', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Family Name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Sponsor', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[B] Lead Bank / Agent', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[B] Other Bank 1', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[B] Other Bank 2', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[B] Other Bank 3', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[B] Other Bank 4', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[B] Cov-Lite?', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('# Lenders', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[SI] Security Name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[SI] Security Type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[SI] Credit Facility Lien Type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[SI] Credit Facility Loan Type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[SI] Stretch Senior (Y/N)', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[SI] Investment Dates', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[SI] Broker / Dealer Quoted', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[SI] Type of Rate', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[SI] Maturity', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[SI] LIBOR Floor', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[SI] Cash Spread to LIBOR', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[SI] Call Protection', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[SI] First Call Date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[SI] Issue Size', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[SI] Security Rating', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[SI] Currency', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[SI] Obligor Country', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[SI] Pennant\nPar Value', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[SI] Blended Purchase Price', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('nan', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[PSM] BB Classification', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[PSM] Priority Revolver?', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[PSM] Revolver Size', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[PSM] TEV', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[PSM] LTV Loan?', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[PSM] LTV', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[PSM] Capitalization Multiple', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[PSM] Defaulted / Restructured?', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('nan_1', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Cash', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('First Lien Debt', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Second Lien Debt', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Total Debt', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Security Type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('nan_2', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('First Lien Gross Leverage', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Second Lien Gross Leverage', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Total Gross Leverage', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Pennant Gross Leverage', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('First Lien Net Leverage', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Second Lien Net Leverage', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Total Net Leverage', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Pennant Net Leverage', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('nan_3', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('nan_4', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Deal Team', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('nan_5', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('TEV Calculation', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Unnamed1', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Unnamed2', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Unnamed3', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Unnamed4', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Unnamed5', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Unnamed6', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Unnamed7', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Unnamed8', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Unnamed9', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Unnamed10', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Unnamed11', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('nan_6', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('LTV', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column("Don't delete â€” need for COVID analysis", sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Unnamed12', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[C] LTM Rev', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[C] LTM EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[C] Cash', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[C] Funded Revolver', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[C] LTM Int. Expense', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[C] Run-rate Int. Expense', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[AC] LTM Rev', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[AC] LTM EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[AC] Unnamed13', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[AC] Unnamed14', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[AC] Unnamed15', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[AC] Unnamed16', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[AC] LTM CapEx', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[AC] LTM Cash Taxes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[AC] LTM Mgmt. Fee', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[AC] LTM Amort.', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[L/Q] PY Rev', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[L/Q] CY Rev', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[L/Q] PY Adj. EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[L/Q] CY Adj. EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[Y] PY Rev', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[Y] CY Rev', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[Y] PY Adj. EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[Y] CY Adj. EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[SI] PIK Coupon', sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.create_table('base_data_mapping',
    sa.Column('bdm_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('fund_type', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('company_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('bd_sheet_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('bd_column_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('rd_file_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('rd_sheet_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('rd_column_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_on', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.UniqueConstraint('fund_type', 'company_id', 'bd_sheet_name', 'bd_column_name', 'rd_sheet_name', 'rd_column_name', name='base_data_mapping_fund_type_company_id_bd_sheet_name_bd_col_key')
    )
    op.create_table('Borrower Stats (Quarterly)',
    sa.Column('Company', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Newly Added Deal?', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('[F] PNNT', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('[F] PFLT', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('[F] PCOF II', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('[F] PCOF III', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('[F] PSCF-Unlev', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('[F] PSCF-Lev', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('[F] PSSL', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CS] Updated as of', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CS] Cash', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CS] Revolver', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CS] Other First Lien', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CS] First Lien Term Loan', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CS] Second Lien', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CS] Senior Notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CS] Senior Unsecured Notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CS] Senior Unsecured Toggle', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CS] Senior Subordinated Notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CS] Other', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CS] HoldCo', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CS] Market Cap / Contributed Equity', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CS] nan', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('[CM] [R] LTM EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [R] LTM CapEx', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [R] LTM Cash Interest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [R] Run-Rate Cash Interest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [R] Taxes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [R] Management Fees', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [R] Amortization', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [R] Current Debt to Capitalization Ratio', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [FP&P] Current EBITDA\nAdjustments', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [L/Q] PY Rev', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [L/Q] CY Rev', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [L/Q] PY Adj. EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [L/Q] CY Adj. EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [Y] PY Rev', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [Y] CY Rev', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [Y] PY Adj. EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [Y] CY Adj. EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CLSO] 1st Lien Net Debt / EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CLSO] OpCo Net Debt / EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CLSO] HoldCo Net Debt / EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CLSO] 1st Lien Net Debt / EBITDA - CapEx', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CLSO] Net Debt / EBITDA - CapEx', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CLSO] HoldCo Net Debt / EBITDA - CapEx', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CLSO] Covenant Senior Leverage', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CLSO] Covenant Total Leverage', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CLSO] nan', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('[ACM] [COI/LC] Closing Date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [COI/LC] S&P Industry', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column("[ACM] [COI/LC] Moody's Industry", sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [COI/LC] PNNT Industry', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [COI/LC] Purchase Price', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [COI/LC] Rating', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [C-ACM(AC] LTM EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [C-ACM(AC] LTM CapEx', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [C-ACM(AC] LTM Cash Interest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [C-ACM(AC] 1st Lien Net Debt / EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [C-ACM(AC] OpCo Net Debt / EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [C-ACM(AC] HoldCo Net Debt / EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [C-ACM(AC] 1st Lien Net Debt / EBITDA - CapEx', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [C-ACM(AC] Net Debt / EBITDA - CapEx', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [C-ACM(AC] HoldCo Net Debt / EBITDA - CapEx', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [C-ACM(AC] Closing Fixed Charge Coverage Ratio', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('[ACM] [C-ACM(AC] Closing Debt to Capitalization', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('[ACM] [P] First Lien', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [P] Second Lien', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [P] Senior Notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [P] Senior Unsecured Notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [P] Senior Unsecured Toggle', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [P] Senior Subordinated Notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [P] Other / HoldCo', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Capitalization Multiple', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('LIBOR / SOFR', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Deal Team', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('First Lien Debt', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Second Lien Debt', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Total Debt', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('nan', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Headquarters', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('US Bank Holdings',
    sa.Column('CUSIP', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Security ID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('LoanX ID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Security/Facility Name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Issue Name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Issuer/Borrower Name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Issue Type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Facility - Form of Purchase', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Asset Type4 Desc', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Facility Category Desc', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Currency', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('P. Lot Current Par Amount (Deal Currency)', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Current Par Amount (Issue Currency) - Settled', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Current Par Amount (Issue Currency) - Traded', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Unfunded Commitment', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('PIK Loan', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Market Value Indenture', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Credit Opinion Date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('Credit Opinion', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Maturity Date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('Original Purchase Price', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Purchase Date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('Settle Date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('Bloomberg ID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Issuer ID', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Facility ID', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Issue ID', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ISIN', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Purchase Lot ID', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Entity ID', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Trustee Deal ID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Deal Name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Deal Nickname', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('base_data',
    sa.Column('Obligor Name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Security Name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Purchase Date (Date Loan contributed to the facility)', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('Total Commitment (Issue Currency)', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Outstanding Principal Balance (Issue Currency)', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Defaulted Collateral Loan / Material Mod (Y/N)', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Date of Default', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Current Fixed Charge Coverage Ratio', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Current Interest Coverage Ratio', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Current Senior Debt/EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Current Total Debt/EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Current TTM EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Credit Improved Loan (Y/N)', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Purchase Price', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Market Value', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Stretch Senior Loan (Y/N)', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Loan Type (Term / Delayed Draw / Revolver)', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column("Current Moody's Rating", sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Current S&P Rating', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Initial Fixed Charge Coverage Ratio', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Initial Senior Debt/EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Initial Total Debt/EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Initial TTM EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Current As of Date For Leverage and EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Maturity Date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('Fixed Rate (Y/N)', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column("Coupon incl. PIK and PIK'able (if Fixed)", sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Floor Obligation (Y/N)', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Floor', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column("Spread incl. PIK and PIK'able", sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Base Rate', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('For Revolvers/Delayed Draw, commitment or other unused fee', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column("PIK / PIK'able For Floating Rate Loans", sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column("PIK / PIK'able For Fixed Rate Loans", sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Interest Paid', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Obligor Industry', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Currency (USD / CAD / AUD / EUR)', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Obligor Country', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('DIP Loan (Y/N)', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Warrants to Purchase Equity (Y/N)', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('LBO Loan (Y/N)', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Parti-cipation (Y/N)', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Convertible to Equity (Y/N)', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Equity Security (Y/N)', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('At Acquisition - Subject to offer or called for redemption (Y/N', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Margin Stock (Y/N)', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Subject to withholding tax (Y/N)', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Zero Coupon Obligation (Y/N)', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Covenant Lite (Y/N)', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Eligible Covenant Lite (Y/N)', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Material Non-Credit Related Risk (Y/N)', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Primarily Secured by Real Estate, Construction Loan or Project ', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Lien Type (First Lien / Split First Lien / Split Lien / Second ', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('At Acquisition - Defaulted Collateral Loan', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Excess Concentration Amount (HARD CODE on Last Day of Reinvestm', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Structured Finance Obligation, finance lease or chattel paper (', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Minimum Equity Amount Floor', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Interest Only Security (Y/N)', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Satisfies all Other Eligibility Criteria (Y/N)', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Determination Date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Currency', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Exchange Rate', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Industry', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Currency_1', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Exchange Rate_1', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Industry No', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Currency_2', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Current Credit Facility Balance', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Cash - Current & PreBorrowing', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Borrowing', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Additional Expences 1', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Additional Expences 2', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Additional Expences 3', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Debt to Capitalization Ratio', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('company_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('report_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True)
    )
    op.create_table('PFLT Borrowing Base',
    sa.Column('nan', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Security', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Issuer', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Credit Facility Lien Type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Credit Facility Loan Type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Stretch Senior (Y/N)', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('S&P Industry', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Currency', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Obligor Country', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Corporate Rating', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Closing Fixed Charge Coverage Ratio', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Closing Debt to Capitalization Ratio', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Closing Senior Leverage', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Closing Total Leverage', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Closing LTM EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Current LTM EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Current Senior Leverage', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Current Total Leverage', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Current Debt to Capitalization Ratio', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Current Information as of Date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('nan_1', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Convertible into Equity', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Equity Security', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Subject of an Offer or Called for Redemption', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Margin Stock', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Subject to Withholding Tax', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Defaulted Collateral Loan at Acquisition', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('All PIK', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Zero Coupon Obligation', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Covenant Lite', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Eligible Covie Lite (1L, Issue > $250mm, B3 / B-)', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Structured Finance Obligation / finance lease', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Material Non-Credit Related Risk', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Primarily Secured by Real Estate', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Interest Only Security', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Satisfies Other Criteria(1)', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('nan_2', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('DIP Loans', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Partial PIK Loan', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Obligations w/ Warrants attached', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Equity < 25% for LBO Loan', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Participations', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('nan_3', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Defaulted Loan', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Credit Improved Loan', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('nan_4', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Cash', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Senior Debt', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Net Senior Debt', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Total Debt', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Net Total Debt', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('LTM EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Sr. Leverage', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Total Leverage', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('nan_5', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('PF Debt', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column("Q2'19 EBITDA", sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Q2 / LTM Decline %', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column("Q2'20E\nEBITDA", sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('LTM Decline $', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Comments', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Projected 6/30 LTM EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Projected Senior Leverage', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Projected Total Leverage', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Defaulted Loan_1', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Material Modification', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Partial PIK (at least L + 450 cash)', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('All PIK_1', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Ineligible Cov-Lite', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('nan_6', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Projected 7/31/2020 LTM EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Projected Senior Leverage_1', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Projected Total Leverage_1', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Defaulted Loan_2', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Material Modification_1', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Partial PIK (at least L + 450 cash)_1', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('All PIK_2', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Ineligible Cov-Lite_1', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('nan_7', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Projected 8/31/2020 LTM EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Projected Senior Leverage_2', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Projected Total Leverage_2', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Defaulted Loan_3', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Material Modification_2', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Partial PIK (at least L + 450 cash)_2', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('All PIK_3', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Ineligible Cov-Lite_2', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('nan_8', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Projected 9/30/2020 LTM EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Projected Senior Leverage_3', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Projected Total Leverage_3', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Defaulted Loan_4', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Material Modification_3', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Partial PIK (at least L + 450 cash)_3', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('All PIK_4', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Ineligible Cov-Lite_3', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('nan_9', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Projected 10/31/2020 LTM EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Projected Senior Leverage_4', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Projected Total Leverage_4', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Defaulted Loan_5', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Material Modification_4', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Partial PIK (at least L + 450 cash)_4', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('All PIK_5', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Ineligible Cov-Lite_4', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('nan_10', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Projected 11/30/2020 LTM EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Projected Senior Leverage_5', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Projected Total Leverage_5', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Defaulted Loan_6', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Material Modification_5', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Partial PIK (at least L + 450 cash)_5', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('All PIK_6', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Ineligible Cov-Lite_5', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('nan_11', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Projected 12/31/2020 LTM EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Projected Senior Leverage_6', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Projected Total Leverage_6', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Defaulted Loan_7', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Material Modification_6', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Partial PIK (at least L + 450 cash)_6', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('All PIK_7', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Ineligible Cov-Lite_6', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('nan_12', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Projected 3/31/2021 LTM EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Projected Senior Leverage_7', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Projected Total Leverage_7', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Defaulted Loan_8', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Material Modification_7', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Partial PIK (at least L + 450 cash)_7', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('All PIK_8', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Ineligible Cov-Lite_7', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('nan_13', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Projected 6/30/2021 LTM EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Projected Senior Leverage_8', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Projected Total Leverage_8', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Defaulted Loan_9', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Material Modification_8', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Partial PIK (at least L + 450 cash)_8', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('All PIK_9', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Ineligible Cov-Lite_8', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('Borrower Stats',
    sa.Column('Company', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Newly Added Deal?', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('[F] PNNT', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('[F] PFLT', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('[F] PCOF II', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('[F] PCOF III', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('[F] PSCF-Unlev', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('[F] PSCF-Lev', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('[F] PSSL', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CS] Updated as of', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CS] Cash', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CS] Revolver', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CS] Other First Lien', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CS] First Lien Term Loan', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CS] Second Lien', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CS] Senior Notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CS] Senior Unsecured Notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CS] Senior Unsecured Toggle', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CS] Senior Subordinated Notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CS] Other', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CS] HoldCo', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CS] Market Cap / Contributed Equity', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CS] nan', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('[CM] [R] LTM Revenue ', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [R] LTM EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [R] LTM CapEx', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [R] LTM Cash Interest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [R] Run-Rate Cash Interest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [R] Taxes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [R] Management Fees', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [R] Amortization', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [R] Current Debt to Capitalization Ratio', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [FP&P] Current EBITDA\nAdjustments', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [L/Q] PY Rev', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [L/Q] CY Rev', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [L/Q] PY Adj. EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [L/Q] CY Adj. EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [Y] PY Rev', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [Y] CY Rev', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [Y] PY Adj. EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [Y] CY Adj. EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CLSO] 1st Lien Net Debt / EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CLSO] OpCo Net Debt / EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CLSO] HoldCo Net Debt / EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CLSO] 1st Lien Net Debt / EBITDA - CapEx', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CLSO] Net Debt / EBITDA - CapEx', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CLSO] HoldCo Net Debt / EBITDA - CapEx', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CLSO] EBITDA / Cash Interest ', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('[CM] [CLSO] EBITDA - CapEx / Cash Interest ', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CLSO] Covenant Senior Leverage', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CLSO] Covenant Total Leverage', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[CM] [CLSO] nan', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('[ACM] [COI/LC] Closing Date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [COI/LC] S&P Industry', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column("[ACM] [COI/LC] Moody's Industry", sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [COI/LC] PNNT Industry', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [COI/LC] Purchase Price', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [COI/LC] Rating', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [C-ACM(AC] LTM Revenue ', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [C-ACM(AC] LTM EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [C-ACM(AC] LTM CapEx', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [C-ACM(AC] LTM Cash Interest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [C-ACM(AC] 1st Lien Net Debt / EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [C-ACM(AC] OpCo Net Debt / EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [C-ACM(AC] HoldCo Net Debt / EBITDA', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [C-ACM(AC] 1st Lien Net Debt / EBITDA - CapEx', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [C-ACM(AC] Net Debt / EBITDA - CapEx', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [C-ACM(AC] HoldCo Net Debt / EBITDA - CapEx', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [C-ACM(AC] EBITDA / Cash Interest ', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('[ACM] [C-ACM(AC] EBITDA - CapEx / Cash Interest ', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('[ACM] [C-ACM(AC] Closing Fixed Charge Coverage Ratio', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('[ACM] [C-ACM(AC] Closing Debt to Capitalization', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('[ACM] [P] First Lien', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [P] Second Lien', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [P] Senior Notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [P] Senior Unsecured Notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [P] Senior Unsecured Toggle', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [P] Senior Subordinated Notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('[ACM] [P] Other / HoldCo', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Capitalization Multiple', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('LIBOR / SOFR', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Deal Team', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('First Lien Debt', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Second Lien Debt', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Total Debt', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('nan', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Headquarters', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('source_file_id', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('Client Holdings',
    sa.Column('Asset ID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Facility ID', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('LoanX ID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('As Of Date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('Issuer/Borrower Name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Issue Name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Par Amount (Deal Currency)', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Principal Balance (Deal Currency)', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column("Issuer Industry Classification - Moody's", sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Issuer Industry Classification - S&P', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Credit Opinion', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Credit Opinion Date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('Maturity Date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('PIK - PIKable', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Coupon Type Desc', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Coupon Index Type Desc', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Current Coupon', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Effective Spread', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Current Spread', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Facility Libor Floor', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Payment Period', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Recovery Rate - Fitch 6', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Recovery Rate - Fitch 7', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Recovery Rate - Fitch 8', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Recovery Rate - Fitch 9', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Recovery Rate - S&P', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Country', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column("Moody's Priority Category", sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column("Deal Issue (Derived) Rating - Moody's", sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Deal Issue (Derived) Rating - S&P', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Facility Number', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Exchange rate', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Current Par Amount (Issue Currency) - Settled', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Current Par Amount (Issue Currency) - Traded', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('pflt_security_mapping',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('soi_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('master_comp_security_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('family_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('security_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('cashfile_security_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='pflt_security_mapping_pk')
    )
    op.drop_table('extracted_base_data_info')
    # ### end Alembic commands ###
